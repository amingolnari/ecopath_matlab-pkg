REco.params$stanzas$stanzas[, First   := c(rep(c(0, 24), 3), 0, 48)]
REco.params$stanzas$stanzas[, Last    := c(rep(c(23, 400), 3), 47, 400)]
REco.params$stanzas$stanzas[, Z       := c(2.026, 0.42, 2.1, 0.425, 1.5,
0.26, 1.1, 0.18)]
REco.params$stanzas$stanzas[, Leading := rep(c(F, T), 4)]
# Diet
REco.params$diet[, Seabirds        := c(rep(NA, 11), 0.1, 0.25, 0.2, 0.15,
rep(NA, 6), 0.3)]
REco.params$diet[, Whales          := c(rep(NA, 3), 0.01, NA, 0.01, NA, 0.01,
NA, 0.01, rep(NA, 4), 0.1, rep(NA, 3),
0.86, rep(NA, 3))]
REco.params$diet[, Seals           := c(rep(NA, 3), 0.05, 0.1, 0.05, 0.2, 0.005,
0.05, 0.005, 0.01, 0.24, rep(0.05, 4),
0.09, rep(NA, 5))]
REco.params$diet[, JuvRoundfish1   := c(rep(NA, 3), rep(c(1e-4, NA), 4), 1e-3,
rep(NA, 2), 0.05, 1e-4, NA, .02, 0.7785,
0.1, 0.05, NA)]
REco.params$diet[, AduRoundfish1   := c(rep(NA, 5), 1e-3, 0.01, 1e-3, 0.05, 1e-3,
0.01, 0.29, 0.1, 0.1, 0.347, 0.03, NA,
0.05, 0.01, rep(NA, 3))]
REco.params$diet[, JuvRoundfish2   := c(rep(NA, 3), rep(c(1e-4, NA), 4), 1e-3,
rep(NA, 2), 0.05, 1e-4, NA, .02, 0.7785,
0.1, .05, NA)]
REco.params$diet[, AduRoundfish2   := c(rep(NA, 3), 1e-4, NA, 1e-4, NA, rep(1e-4, 4),
0.1, rep(0.05, 3), 0.2684, 0.01, 0.37, 0.001,
NA, 0.1, NA)]
REco.params$diet[, JuvFlatfish1    := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 3),
rep(1e-4, 2), NA, 0.416, 0.4334, 0.1, 0.05,
NA)]
REco.params$diet[, AduFlatfish1    := c(rep(NA, 7), rep(1e-4, 5), rep(NA, 2), 0.001,
0.05, 0.001, 0.6, 0.2475, NA, 0.1, NA)]
REco.params$diet[, JuvFlatfish2    := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 3),
rep(1e-4, 2), NA, 0.416, 0.4334, 0.1, 0.05,
NA)]
REco.params$diet[, AduFlatfish2    := c(rep(NA, 7), 1e-4, NA, 1e-4, rep(NA, 4),
rep(1e-4, 3), 0.44, 0.3895, NA, 0.17, NA)]
REco.params$diet[, OtherGroundfish := c(rep(NA, 3), rep(1e-4, 8), 0.05, 0.08, 0.0992,
0.3, 0.15, 0.01, 0.3, 0.01, rep(NA, 3))]
REco.params$diet[, Foragefish1     := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),
0.8196, 0.06, 0.12, NA)]
REco.params$diet[, Foragefish2     := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),
0.8196, 0.06, 0.12, NA)]
REco.params$diet[, OtherForagefish := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),
0.8196, 0.06, 0.12, NA)]
REco.params$diet[, Megabenthos     := c(rep(NA, 15), 0.1, 0.03, 0.55, rep(NA, 2), 0.32,
NA)]
REco.params$diet[, Shellfish       := c(rep(NA, 18), 0.3, 0.5, 0.2, NA)]
REco.params$diet[, Macrobenthos    := c(rep(NA, 16), 0.01, rep(0.2, 2), NA, 0.59, NA)]
REco.params$diet[, Zooplankton     := c(rep(NA, 18), 0.2, 0.6, 0.2, NA)]
#-----------------------------
# Calcs
#-----------------------------
# Write model to file
matfile <- "~/Documents/Research/Working/Rpath/tests/rpathexample.mat"
writeMat(matfile,
model=REco.params$model,
diet=REco.params$diet,
stanza1=REco.params$stanza$stgroups,
stanza2=REco.params$stanza$stanzas)
REco
rm(list=ls())
# Set up environment
# library(devtools)
# devtools::install_github('slucey/RpathDev/Rpath', build_vignettes = TRUE) # in case of updates
# library(Rpath)
# library(R.matlab)
# library(data.table)
#-----------------------------
# Build the sample Rpath model
#-----------------------------
# Groups and types for the R Ecosystem
groups <- c('Seabirds', 'Whales', 'Seals', 'JuvRoundfish1', 'AduRoundfish1',
'JuvRoundfish2', 'AduRoundfish2', 'JuvFlatfish1', 'AduFlatfish1',
'JuvFlatfish2', 'AduFlatfish2', 'OtherGroundfish', 'Foragefish1',
'Foragefish2', 'OtherForagefish', 'Megabenthos', 'Shellfish',
'Macrobenthos', 'Zooplankton', 'Phytoplankton', 'Detritus',
'Discards', 'Trawlers', 'Midwater', 'Dredgers')
types  <- c(rep(0, 19), 1, rep(2, 2), rep(3, 3))
stgroups <- c(rep(NA, 3), rep('Roundfish1', 2), rep('Roundfish2', 2),
rep('Flatfish1', 2), rep('Flatfish2', 2), rep(NA, 14))
REco.params <- create.rpath.param(group = groups, type = types, stgroup = stgroups,
nstanzas = rep(2,4))
# Model parameters
biomass <- c(0.0149, 0.454, NA, NA, 1.39, NA, 5.553, NA, 5.766, NA,
0.739, 7.4, 5.1, 4.7, 5.1, NA, 7, 17.4, 23, 10, rep(NA, 5))
pb <- c(0.098, 0.031, 0.100, 2.026, 0.42, 2.1, 0.425, 1.5, 0.26, 1.1, 0.18, 0.6,
0.61, 0.65, 1.5, 0.9, 1.3, 7, 39, 240, rep(NA, 5))
qb <- c(76.750, 6.976, 34.455, NA, 2.19, NA, 3.78, NA, 1.44, NA, 1.69,
1.764, 3.52, 5.65, 3.6, 2.984, rep (NA, 9))
REco.params$model[, Biomass := biomass]
REco.params$model[, PB := pb]
REco.params$model[, QB := qb]
# EE for groups w/o biomass
REco.params$model[Group %in% c('Seals', 'Megabenthos'), EE := 0.8]
# Production to Consumption for those groups without a QB
REco.params$model[Group %in% c('Shellfish', 'Zooplankton'), ProdCons:= 0.25]
REco.params$model[Group == 'Macrobenthos', ProdCons := 0.35]
# Biomass accumulation and unassimilated production
REco.params$model[, BioAcc  := c(rep(0, 22), rep(NA, 3))]
REco.params$model[, Unassim := c(rep(0.2, 18), 0.4, rep(0, 3), rep(NA, 3))]
# Detrital Fate
REco.params$model[, Detritus := c(rep(1, 20), rep(0, 5))]
REco.params$model[, Discards := c(rep(0, 22), rep(1, 3))]
# Fisheries Landings
trawl  <- c(rep(0, 4), 0.08, 0, 0.32, 0, 0.09, 0, 0.05, 0.2, rep(0, 10), rep(NA, 3))
mid    <- c(rep(0, 12), 0.3, 0.08, 0.02, rep(0, 7), rep(NA, 3))
dredge <- c(rep(0, 15), 0.1, 0.5, rep(0, 5), rep(NA, 3))
REco.params$model[, Trawlers := trawl]
REco.params$model[, Midwater := mid]
REco.params$model[, Dredgers := dredge]
# Discards
trawl.d  <- c(1e-5, 1e-7, 0.001, 0.001, 0.005, 0.001, 0.009, 0.001, 0.04, 0.001,
0.01, 0.08, 0.001, 0.001, 0.001, rep(0, 7), rep(NA, 3))
mid.d    <- c(rep(0, 2), 0.001, 0.001, 0.01, 0.001, 0.01, rep(0, 4), 0.05, 0.05,
0.01, 0.01, rep(0, 7), rep(NA, 3))
dredge.d <- c(rep(0, 3), 0.001, 0.05, 0.001, 0.05, 0.001, 0.05, 0.001, 0.01, 0.05,
rep(0, 3), 0.09, 0.01, 1e-4, rep(0, 4), rep(NA, 3))
REco.params$model[, Trawlers.disc := trawl.d]
REco.params$model[, Midwater.disc := mid.d]
REco.params$model[, Dredgers.disc := dredge.d]
# Group stanza parameters
REco.params$stanzas$stgroups[, VBGF_Ksp := c(0.145, 0.295, 0.0761, 0.112)]
REco.params$stanzas$stgroups[, Wmat     := c(0.0769, 0.561, 0.117,  0.321)]
# Individual stanza parameters
REco.params$stanzas$stanzas[, First   := c(rep(c(0, 24), 3), 0, 48)]
REco.params$stanzas$stanzas[, Last    := c(rep(c(23, 400), 3), 47, 400)]
REco.params$stanzas$stanzas[, Z       := c(2.026, 0.42, 2.1, 0.425, 1.5,
0.26, 1.1, 0.18)]
REco.params$stanzas$stanzas[, Leading := rep(c(F, T), 4)]
# Diet
REco.params$diet[, Seabirds        := c(rep(NA, 11), 0.1, 0.25, 0.2, 0.15,
rep(NA, 6), 0.3)]
REco.params$diet[, Whales          := c(rep(NA, 3), 0.01, NA, 0.01, NA, 0.01,
NA, 0.01, rep(NA, 4), 0.1, rep(NA, 3),
0.86, rep(NA, 3))]
REco.params$diet[, Seals           := c(rep(NA, 3), 0.05, 0.1, 0.05, 0.2, 0.005,
0.05, 0.005, 0.01, 0.24, rep(0.05, 4),
0.09, rep(NA, 5))]
REco.params$diet[, JuvRoundfish1   := c(rep(NA, 3), rep(c(1e-4, NA), 4), 1e-3,
rep(NA, 2), 0.05, 1e-4, NA, .02, 0.7785,
0.1, 0.05, NA)]
REco.params$diet[, AduRoundfish1   := c(rep(NA, 5), 1e-3, 0.01, 1e-3, 0.05, 1e-3,
0.01, 0.29, 0.1, 0.1, 0.347, 0.03, NA,
0.05, 0.01, rep(NA, 3))]
REco.params$diet[, JuvRoundfish2   := c(rep(NA, 3), rep(c(1e-4, NA), 4), 1e-3,
rep(NA, 2), 0.05, 1e-4, NA, .02, 0.7785,
0.1, .05, NA)]
REco.params$diet[, AduRoundfish2   := c(rep(NA, 3), 1e-4, NA, 1e-4, NA, rep(1e-4, 4),
0.1, rep(0.05, 3), 0.2684, 0.01, 0.37, 0.001,
NA, 0.1, NA)]
REco.params$diet[, JuvFlatfish1    := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 3),
rep(1e-4, 2), NA, 0.416, 0.4334, 0.1, 0.05,
NA)]
REco.params$diet[, AduFlatfish1    := c(rep(NA, 7), rep(1e-4, 5), rep(NA, 2), 0.001,
0.05, 0.001, 0.6, 0.2475, NA, 0.1, NA)]
REco.params$diet[, JuvFlatfish2    := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 3),
rep(1e-4, 2), NA, 0.416, 0.4334, 0.1, 0.05,
NA)]
REco.params$diet[, AduFlatfish2    := c(rep(NA, 7), 1e-4, NA, 1e-4, rep(NA, 4),
rep(1e-4, 3), 0.44, 0.3895, NA, 0.17, NA)]
REco.params$diet[, OtherGroundfish := c(rep(NA, 3), rep(1e-4, 8), 0.05, 0.08, 0.0992,
0.3, 0.15, 0.01, 0.3, 0.01, rep(NA, 3))]
REco.params$diet[, Foragefish1     := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),
0.8196, 0.06, 0.12, NA)]
REco.params$diet[, Foragefish2     := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),
0.8196, 0.06, 0.12, NA)]
REco.params$diet[, OtherForagefish := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),
0.8196, 0.06, 0.12, NA)]
REco.params$diet[, Megabenthos     := c(rep(NA, 15), 0.1, 0.03, 0.55, rep(NA, 2), 0.32,
NA)]
REco.params$diet[, Shellfish       := c(rep(NA, 18), 0.3, 0.5, 0.2, NA)]
REco.params$diet[, Macrobenthos    := c(rep(NA, 16), 0.01, rep(0.2, 2), NA, 0.59, NA)]
REco.params$diet[, Zooplankton     := c(rep(NA, 18), 0.2, 0.6, 0.2, NA)]
#-----------------------------
# Calcs
#-----------------------------
# Write model to file
matfile <- "~/Documents/Research/Working/Rpath/tests/rpathexample.mat"
writeMat(matfile,
model=REco.params$model,
diet=REco.params$diet,
stanza1=REco.params$stanza$stgroups,
stanza2=REco.params$stanza$stanzas)
# Fill stanza details
# Test.params <- copy(REco.params)          # Before stanza calcs
REco.params <- rpath.stanzas(REco.params) # After
stanzafile <- "~/Documents/Research/Working/Rpath/tests/rpathexamplestanza.mat"
writeMat(stanzafile,
stanzadetails=REco.params$stanzas$StGroup[[1])
# Run the Ecopath balance calcs
REco <- rpath(REco.params, eco.name = 'R Ecosystem')
writeMat(stanzafile,
stanzadetails=REco.params$stanzas$StGroup[[1]])
# Run the Ecopath balance calcs
REco <- rpath(REco.params, eco.name = 'R Ecosystem')
REco
outfile <- "~/Documents/Research/Working/Rpath/tests/rpathexampleout.mat"
writeMat(outfile, REco)
writeMat(outfile, REco=REco)
REco.params
REco.params$model
help(write.rpath.params)
help(write.rpath.param)
help(read.rpath.param)
library(Rpath)
help(read.rpath.param)
help(read.rpath.params)
help(Rpath)
?write.rpath.params
devtools::install_github('slucey/RpathDev/Rpath', build_vignettes = TRUE) # in case of updates
library(Rpath)
help(write.rpath.params)
help(write.rpath.params)
quit
rpath
vignette('Rpath')
library(devtools)
devtools::install_github('slucey/RpathDev/Rpath', ref = 'Public', build_vignettes = TRUE) # in case of updates
devtools::install_github('slucey/RpathDev/Rpath', ref = 'Public', build_vignettes = FALSE)
library(Rpath)
setwd('~/Documents/mecopath_temp/')
source('~/Documents/mecopath_temp/examples/rpath_example.R')
source('~/Documents/mecopath_temp/examples/rpath_example.R')
warnings()
source('~/Documents/mecopath_temp/examples/rpath_example.R')
REco.params$diet[, Zooplankton     := c(rep(NA, 18), 0.2, 0.6, 0.2, NA)]
REco.params
REco.params$diet
?read.rpath.params
setwd('examples/')
Gen37 = read.rpath.params('Gen37/gen37_model.csv', 'Gen37/gen37_diet.csv')
Gen37
Gen37$diet
Ep = rpath(Gen37)
Ep
REco
REco.params
REco.params$model
Gen37$model
Gen37
Gen37$model
REco.params$model
rpath(Gen37)
Gen37$model$EE
Ep = rpath(Gen37)
Ep
Gen37
Gen37 = read.rpath.params('Gen37/gen37_model.csv', 'Gen37/gen37_diet.csv')
Gen37
Gen37$model$EE
Ep = rpath(Gen37)
Ep
Gen37$diet
REco.params$diet
Gen37$diet
Gen37 = read.rpath.params('Gen37/gen37_model.csv', 'Gen37/gen37_diet.csv')
Gen37$diet
Ep = rpath(Gen37)
Ep
Tb = read.rpath.params('TampaBay/tb_model.csv', 'TampaBay/tb_diet.csv', stanzagroupfile = 'TampaBay/tb_stanza_groups.csv', stanzafile = 'TampaBay/tb_stanzas.csv')
Tb$diet
rpath(Tb)
Ep = rpath(Tb)
Ep
Ep$BB
Ep$EE
Ep$GE
REco.params
REco.params$diet
source('~/Documents/mecopath_temp/examples/rpath_example.R')
warnings()
clear
clc
source('~/Documents/mecopath_temp/examples/rpath_example.R')
source('~/Documents/mecopath_temp/examples/rpath_example.R')
devtools::install_github('slucey/RpathDev/Rpath', ref = 'Public', build_vignettes = TRUE) # in case of updates
devtools::install_github('slucey/RpathDev/Rpath', ref = 'Public', build_vignettes = TRUE, force=TRUE)
vignette('Rsim')
REco.sim <- rsim.scenario(REco, REco.params, years = 100)
REco = rpath(REco.params)
REco.sim <- rsim.scenario(REco, REco.params, years = 100)
REco.sim <- adjust.fishing(REco.sim, 'EFFORT', gear = 'Trawlers', year = 25:100,
value = 2)
REco.run1 <- rsim.run(REco.sim, method = 'RK4', years = 100)
rsim.plot(REco.run1, groups[1:22])
REco.run1
REco
REco$QQ
rm(list=ls())
source('~/Documents/mecopath_temp/examples/rpath_example.R')
REco <- rpath(REco.params, eco.name = 'R Ecosystem')
summary(REco)
webplot(REco)
webplot(REco)
REco.sim <- rsim.scenario(REco, REco.params, years = 100)
REco.sim$VV
REco.sim$QQ
primTo   <- ifelse(Rpath$type > 0 & Rpath$type <= 1,
1:length(Rpath$PB),
0)
primFrom <- rep(0, length(Rpath$PB))
primQ    <- Rpath$PB * Rpath$BB
Rpath = REco
primTo   <- ifelse(Rpath$type > 0 & Rpath$type <= 1,
1:length(Rpath$PB),
0)
primFrom <- rep(0, length(Rpath$PB))
primQ    <- Rpath$PB * Rpath$BB
primTo
primFrom
primTo   <- ifelse(Rpath$type > 0 & Rpath$type <= 1,
1:length(Rpath$PB),
0)
primFrom <- rep(0, length(Rpath$PB))
primQ    <- Rpath$PB * Rpath$BB
#Change production to consumption for mixotrophs
mixotrophs <- which(Rpath$type > 0 & Rpath$type < 1)
primQ[mixotrophs] <- primQ[mixotrophs] / Rpath$GE[mixotrophs] *
Rpath$type[mixotrophs]
#Import links
importTo <- ifelse(Rpath$DC[nrow(Rpath$DC), ] > 0,
1:ncol(Rpath$DC),
0)
importFrom <- rep(0, ncol(Rpath$DC))
importQ <- Rpath$DC[nrow(Rpath$DC), ] * Rpath$QB[1:nliving] * Rpath$BB[1:nliving]
#Predator/prey links
preyfrom  <- row(Rpath$DC)
preyto    <- col(Rpath$DC)
predpreyQ <- Rpath$DC[1:(nliving + ndead), ] *
t(matrix(Rpath$QB[1:nliving] * Rpath$BB[1:nliving],
nliving, nliving + ndead))
nliving <- Rpath$NUM_LIVING
ndead   <- Rpath$NUM_DEAD
simpar <- c()
simpar$NUM_GROUPS <- Rpath$NUM_GROUPS
simpar$NUM_LIVING <- nliving
simpar$NUM_DEAD   <- ndead
simpar$NUM_GEARS  <- Rpath$NUM_GEARS
simpar$spname     <- c("Outside", Rpath$Group)
simpar$spnum      <- 0:length(Rpath$BB)
#Energetics for Living and Dead Groups
#Reference biomass for calculating YY
simpar$B_BaseRef <- c(1.0, Rpath$BB)
#Mzero proportional to (1-EE)
simpar$MzeroMort <- c(0.0, Rpath$PB * (1.0 - Rpath$EE))
#Unassimilated is the proportion of CONSUMPTION that goes to detritus.
simpar$UnassimRespFrac <- c(0.0, Rpath$GS);
#Active respiration is proportion of CONSUMPTION that goes to "heat"
#Passive respiration/ VonB adjustment is left out here
simpar$ActiveRespFrac <-  c(0.0, ifelse(Rpath$QB > 0,
1.0 - (Rpath$PB / Rpath$QB) - Rpath$GS,
0.0))
#Ftime related parameters
simpar$FtimeAdj   <- rep(0.0, length(simpar$B_BaseRef))
simpar$FtimeQBOpt <-   c(1.0, Rpath$QB)
simpar$PBopt      <-   c(1.0, Rpath$PB)
#Fishing Effort defaults to 0 for non-gear, 1 for gear
#KYA EFFORT REMOVED FROM PARAMS July 2015
simpar$fish_Effort <- ifelse(simpar$spnum <= nliving + ndead,
0.0,
1.0)
#NoIntegrate
simpar$NoIntegrate <- ifelse(simpar$MzeroMort * simpar$B_BaseRef >
2 * steps_yr * steps_m,
0,
simpar$spnum)
#Pred/Prey defaults
simpar$HandleSelf   <- rep(handleselfwt,   Rpath$NUM_GROUPS + 1)
simpar$ScrambleSelf <- rep(scrambleselfwt, Rpath$NUM_GROUPS + 1)
#primary production links
#primTo   <- ifelse(Rpath$PB>0 & Rpath$QB<=0, 1:length(Rpath$PB),0 )
primTo   <- ifelse(Rpath$type > 0 & Rpath$type <= 1,
1:length(Rpath$PB),
0)
primFrom <- rep(0, length(Rpath$PB))
primQ    <- Rpath$PB * Rpath$BB
#Change production to consumption for mixotrophs
mixotrophs <- which(Rpath$type > 0 & Rpath$type < 1)
primQ[mixotrophs] <- primQ[mixotrophs] / Rpath$GE[mixotrophs] *
Rpath$type[mixotrophs]
#Import links
importTo <- ifelse(Rpath$DC[nrow(Rpath$DC), ] > 0,
1:ncol(Rpath$DC),
0)
importFrom <- rep(0, ncol(Rpath$DC))
importQ <- Rpath$DC[nrow(Rpath$DC), ] * Rpath$QB[1:nliving] * Rpath$BB[1:nliving]
#Predator/prey links
preyfrom  <- row(Rpath$DC)
preyto    <- col(Rpath$DC)
predpreyQ <- Rpath$DC[1:(nliving + ndead), ] *
t(matrix(Rpath$QB[1:nliving] * Rpath$BB[1:nliving],
nliving, nliving + ndead))
simpar$PreyFrom <- c(primFrom[primTo > 0], preyfrom [predpreyQ > 0],
importFrom[importTo > 0])
simpar$PreyTo   <- c(primTo  [primTo > 0], preyto   [predpreyQ > 0],
importTo  [importTo > 0])
simpar$QQ       <- c(primQ   [primTo > 0], predpreyQ[predpreyQ > 0],
importQ   [importTo > 0])
numpredprey <- length(simpar$QQ)
simpar$DD <- rep(mhandle,   numpredprey)
simpar$VV <- rep(mscramble, numpredprey)
rm(list = ls())
source('~/Documents/mecopath_temp/examples/rpath_example.R')
rm REco.sim
rm(REco.sim)
Rpath = REco;
mscramble = 2, mhandle = 1000, preyswitch = 1
mscramble = 2
mhandle = 1000
preyswitch = 1
scrambleselfwt = 1
handleselfwt = 1
steps_yr = 12
steps_m = 1
nliving <- Rpath$NUM_LIVING
ndead   <- Rpath$NUM_DEAD
simpar <- c()
simpar$NUM_GROUPS <- Rpath$NUM_GROUPS
simpar$NUM_LIVING <- nliving
simpar$NUM_DEAD   <- ndead
simpar$NUM_GEARS  <- Rpath$NUM_GEARS
simpar$spname     <- c("Outside", Rpath$Group)
simpar$spnum      <- 0:length(Rpath$BB)
#Energetics for Living and Dead Groups
#Reference biomass for calculating YY
simpar$B_BaseRef <- c(1.0, Rpath$BB)
#Mzero proportional to (1-EE)
simpar$MzeroMort <- c(0.0, Rpath$PB * (1.0 - Rpath$EE))
#Unassimilated is the proportion of CONSUMPTION that goes to detritus.
simpar$UnassimRespFrac <- c(0.0, Rpath$GS);
#Active respiration is proportion of CONSUMPTION that goes to "heat"
#Passive respiration/ VonB adjustment is left out here
simpar$ActiveRespFrac <-  c(0.0, ifelse(Rpath$QB > 0,
1.0 - (Rpath$PB / Rpath$QB) - Rpath$GS,
0.0))
#Ftime related parameters
simpar$FtimeAdj   <- rep(0.0, length(simpar$B_BaseRef))
simpar$FtimeQBOpt <-   c(1.0, Rpath$QB)
simpar$PBopt      <-   c(1.0, Rpath$PB)
#Fishing Effort defaults to 0 for non-gear, 1 for gear
#KYA EFFORT REMOVED FROM PARAMS July 2015
simpar$fish_Effort <- ifelse(simpar$spnum <= nliving + ndead,
0.0,
1.0)
#NoIntegrate
simpar$NoIntegrate <- ifelse(simpar$MzeroMort * simpar$B_BaseRef >
2 * steps_yr * steps_m,
0,
simpar$spnum)
#Pred/Prey defaults
simpar$HandleSelf   <- rep(handleselfwt,   Rpath$NUM_GROUPS + 1)
simpar$ScrambleSelf <- rep(scrambleselfwt, Rpath$NUM_GROUPS + 1)
#primary production links
#primTo   <- ifelse(Rpath$PB>0 & Rpath$QB<=0, 1:length(Rpath$PB),0 )
primTo   <- ifelse(Rpath$type > 0 & Rpath$type <= 1,
1:length(Rpath$PB),
0)
primFrom <- rep(0, length(Rpath$PB))
primQ    <- Rpath$PB * Rpath$BB
#Change production to consumption for mixotrophs
mixotrophs <- which(Rpath$type > 0 & Rpath$type < 1)
primQ[mixotrophs] <- primQ[mixotrophs] / Rpath$GE[mixotrophs] *
Rpath$type[mixotrophs]
#Import links
importTo <- ifelse(Rpath$DC[nrow(Rpath$DC), ] > 0,
1:ncol(Rpath$DC),
0)
importFrom <- rep(0, ncol(Rpath$DC))
importQ <- Rpath$DC[nrow(Rpath$DC), ] * Rpath$QB[1:nliving] * Rpath$BB[1:nliving]
#Predator/prey links
preyfrom  <- row(Rpath$DC)
preyto    <- col(Rpath$DC)
predpreyQ <- Rpath$DC[1:(nliving + ndead), ] *
t(matrix(Rpath$QB[1:nliving] * Rpath$BB[1:nliving],
nliving, nliving + ndead))
#combined
simpar$PreyFrom <- c(primFrom[primTo > 0], preyfrom [predpreyQ > 0],
importFrom[importTo > 0])
simpar$PreyTo   <- c(primTo  [primTo > 0], preyto   [predpreyQ > 0],
importTo  [importTo > 0])
simpar$QQ       <- c(primQ   [primTo > 0], predpreyQ[predpreyQ > 0],
importQ   [importTo > 0])
numpredprey <- length(simpar$QQ)
simpar$DD <- rep(mhandle,   numpredprey)
simpar$VV <- rep(mscramble, numpredprey)
#NOTE:  Original in C didn't set handleswitch for primary production groups.  Error?
#probably not when group 0 biomass doesn't change from 1.
simpar$HandleSwitch <- rep(preyswitch, numpredprey)
#scramble combined prey pools
Btmp <- simpar$B_BaseRef
py   <- simpar$PreyFrom + 1.0
pd   <- simpar$PreyTo + 1.0
VV   <- simpar$VV * simpar$QQ / Btmp[py]
AA   <- (2.0 * simpar$QQ * VV) / (VV * Btmp[pd] * Btmp[py] - simpar$QQ * Btmp[pd])
simpar$PredPredWeight <- AA * Btmp[pd]
simpar$PreyPreyWeight <- AA * Btmp[py]
simpar$PredTotWeight <- rep(0, length(simpar$B_BaseRef))
simpar$PreyTotWeight <- rep(0, length(simpar$B_BaseRef))
for(links in 1:numpredprey){
simpar$PredTotWeight[py[links]] <- simpar$PredTotWeight[py[links]] + simpar$PredPredWeight[links]
simpar$PreyTotWeight[pd[links]] <- simpar$PreyTotWeight[pd[links]] + simpar$PreyPreyWeight[links]
}
simpar$VV
Btmp[py]
primQ
primTo
importTo
py
size(Btmp[py])
Btmp[py]
clc
source('~/Documents/mecopath_temp/examples/rpath_example.R')
